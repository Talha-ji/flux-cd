name: Deploy to Server and Start Port Forwarding

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Set up SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 3: Add the server's host key to known hosts
      - name: Add host key to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Step 4: Create a deploy script
      - name: Create deploy script
        run: |
          cat << 'EOF' > deploy.sh
          #!/bin/bash
          set -e

          # Navigate to the project directory
          cd /home/ubuntu

          # Configure git
          git config --global --add safe.directory /home/ubuntu

          # Set the correct remote URL with token
          git remote set-url origin "https://$TOKEN@github.com/Talha-ji/flux-cd.git"

          # Fetch and reset
          git fetch origin main
          git checkout main
          git reset --hard origin/main

          # Set proper permissions
          chown -R ubuntu:ubuntu /home/ubuntu

          # List directory contents to verify
          ls -la
          EOF

      # Step 5: Deploy to the server
      - name: Deploy to server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          TOKEN: ${{ secrets.EC2_TOKEN }}
        run: |
          # Make the deploy script executable
          chmod +x deploy.sh

          # Copy the deploy script to the server
          scp deploy.sh ${SSH_USER}@${SSH_HOST}:/tmp/deploy.sh

          # Execute the deploy script with sudo and pass environment variables
          ssh ${SSH_USER}@${SSH_HOST} "sudo -E bash -c 'TOKEN=\"$TOKEN\" bash /tmp/deploy.sh'"

          # Start the port-forward script in the background
          ssh ${SSH_USER}@${SSH_HOST} "nohup bash /home/ubuntu/port-forward.sh > /dev/null 2>&1 &"

          # Cleanup
          ssh ${SSH_USER}@${SSH_HOST} "rm /tmp/deploy.sh"
          rm deploy.sh

      # Step 6: Verify deployment
      - name: Verify deployment
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh ${SSH_USER}@${SSH_HOST} "ls -la /home/ubuntu"
